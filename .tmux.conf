# Options
# 设置终端颜色
#set -g default-terminal "tmux-256color"
#set -ga terminal-overrides ",*256col*:Tc"
set-option -g default-terminal "screen-256color"

# Use vim key bindings
# 使用vim键位设定
set-option -g mode-keys vi
set-option -g status-keys vi

# Turn the mouse on
# 开启鼠标模式
set-option -g mouse on

# Time in milliseconds for which tmux waits after an escape
# tmux在转义后等待的时间（毫秒）
set-option -g escape-time 0

# Enable supported focus events
# 启用焦点设定
set-option -g focus-events on

# History settings
# 历史文件设定
set-option -g history-limit 10000
set-option -g history-file ~/.tmux/tmuxhistory

# Activity
# 开启活动通知
set-option -g monitor-activity on
set-option -g visual-activity off

# Start window index at 1
# 索引页以一为起始(window)
set-option -g base-index 1

# Start pane index at 1
# 索引页以一为起始(pane)
set-option -g pane-base-index 1

# Rename window to reflect current program
# 重命名窗口以反映当前程序
set-option -g -w automatic-rename on

# Renumber windows when one is closed
# 关闭windows时重新编号
set-option -g renumber-windows on

# No bells at all
# 全局无响铃设定
set-option -g bell-action none

# Enable RGB color if running in xterm
# 运行xterm时开启真色彩
set-option -g -a terminal-overrides ",xterm-256color:Tc"

# Unbind default prefix key
# 解除默认prefix键设定
# unbind-key C-b

# Set default prefix key
# 设定新的prefix键位
set-option -g prefix C-b

# Bind "C-a C-a" to send "C-a"
# 设定C-b C-b发送C-b
bind-key C-b send-prefix

# Reload configuration
# 重载tmux配置文件的快捷键
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# status centre
# 居中状态栏
# set -g status-justify "centre"           

# vim模式复制粘贴设定
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Split window
# 分割窗口
bind-key v split-window -h
bind-key s split-window -v

# Switch panes
# 切换窗口
# bind  h select-pane -L
# bind  l select-pane -R
# bind  k select-pane -U
# bind  j select-pane -D

# Smart pane switching with awareness of Vim splits.
# 同步vim键位与tmux键位(切换窗口)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# 调整窗口大小
bind -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 5"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 5"

# TPM设定
set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'

# List of plugins
# 插件列表
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# 其他插件
set -g @plugin 'odedlaz/tmux-onedark-theme'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the ve
# 安装插件
run -b '$HOME/.tmux/plugins/tpm/tpm'

# 插件设定
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
