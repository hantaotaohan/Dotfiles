; -----------------------------------------------------------------------------------------------------------------
; CheatSheet
; -----------------------------------------------------------------------------------------------------------------

% cheatsheet
# Vim CheatSheet
bat --style header,grid --color always $HOME/dotfiles/setup/cheatsheets/vim_cheatsheet.vim

% cheatsheet
# Bash CheatSheet
bat --style header,grid --color always $HOME/dotfiles/setup/cheatsheets/bash_cheatsheet.vim

% cheatsheet
# Git CheatSheet
bat --style header,grid --color always $HOME/dotfiles/setup/cheatsheets/git_cheatsheet.vim

% cheatsheet
# Tmux CheatSheet
bat --style header,grid --color always $HOME/dotfiles/setup/cheatsheets/tmux_cheatsheet.vim

; -----------------------------------------------------------------------------------------------------------------
; zip
; -----------------------------------------------------------------------------------------------------------------

% zip
# compressed zip
zip -r <filename> <dir>
$ filename : echo -e 'Please Input Filename:  \n'
$ dir : ls .

% zip
# compressed Multiple zip
zip -r <filename> $(echo "<dir>")
$ filename : echo -e 'Please Input Filename:  \n'
$ dir : ls .  --- --multi 

% zip
# Add a file to an existing zip file
zip <filename> <file>
$ filename : echo -e 'Please Input Filename:  \n'
$ dir : ls .  --- --multi 

% zip
# Remove files from existing zip files
zip -d <dir> <filename>
$ dir : ls .
$ filename : zip -sf <dir>

% zip
# Unzip to the specified directory
unzip <compressed_file> -d <extracted_file>
$ compressed_file : ls .
$ extracted_file : echo -e 'Please Input Extracted_file:  \n'

% zip
# View the contents of the package
unzip -l <file_zip>
$ file_zip : ls .

; -----------------------------------------------------------------------------------------------------------------
; Tar
; -----------------------------------------------------------------------------------------------------------------

% tar
# create .tar package
tar cf <target_tar> <file1> <file2> <file3>

% tar
# create .tar.gz package
tar czf <target_tar_gz> <file1> <file2> <file3>

% tar
# Use the Directory to create a compression package
tar czf <target_tar_gz> -C <path/to/directory> .

% tar
# Unzip to the current directory
tar xf <source_tar>

% tar
# Unzip to the specified directory
tar xf <source_tar> -C <directory>

; -----------------------------------------------------------------------------------------------------------------
; Convert & ImageMagick
; -----------------------------------------------------------------------------------------------------------------

% convert
# jpg to png
convert <image_jpg> <image_png>

% convert
# img zoom 50%
convert <image_png> -resize 50% <image2_png>

% convert
# Zoom the picture and maintain the vertical and horizontal scale
convert <image_png> -resize 640x480 <image2_png>

% convert
# Add pictures horizontally
convert <image1_png> <image2_png> <image3_png> +append <image123_png>

% convert
# Add pictures vertically
convert <image1_png> <image2_png> <image3_png> -append <image123_png>

% convert
# Create a gif of images with a 100-millisecond delay 
convert <image1_png> <image2_png> <image3_png> -delay 10 <animation_gif>

% convert
# png to pdf
convert <img_png>  <doc_pdf>

% convert
# pdf to png
convert -density 200 <foo_pdf> <foo-%02d_png>

% convert
# Method.1:Multiple pictures are merged into pdfs in order
convert $(ls *jpg | sort -n) <result_pdf>

% convert
# Method.2:Multiple pictures are merged into pdfs in order
ls *jpg | sort -n | convert @- result_pdf

; -----------------------------------------------------------------------------------------------------------------
; Git
; -----------------------------------------------------------------------------------------------------------------

% git
# Create and Toggle a new branch 
git checkout --orphan latest_branch

% git
# Git add --all
git add -A

% git
# Git add and Commit 
git commit -am "commit message"

% git
# Delete master branch
git branch -D master

% git
# Rename branch names to Master
git branch -m master

% git
# Forced Push
git push -f origin master

% git
# Clear origin Commit number
git checkout --orphan latest_branch && \
git add -A && \
git commit -am "commit message" && \
git branch -D main && \
git branch -m main && \
git push -f origin main
